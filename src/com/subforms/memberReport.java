/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.subforms;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import com.glasspanepopup.GlassPanePopup;
import com.samplemessage.Message2;

/**
 *
 * @author Aruna
 */
public class memberReport extends javax.swing.JFrame {

    /**
     * Creates new form memberReport
     */
    JDBC.Jdbc DB = new JDBC.Jdbc();
    Message2 msg = new Message2();
    String cellData;
    public memberReport() {
        initComponents();
        tableDataClear();
        tableDataLoader();
        GlassPanePopup.install(this);
    }

    private void tableDataClear(){
        try {
            while (0<=memberTBL.getRowCount()){
                DefaultTableModel table = (DefaultTableModel)memberTBL.getModel();
                table.removeRow(memberTBL.getRowCount()-1);
            }
        } catch (Exception e) {
            System.out.println("Member Form tableDataClear: "+e);
        }
    }
    
    private void tableDataLoader (){
        try {
            java.sql.ResultSet rs = DB.getdata("SELECT * FROM customers");   
            while (rs.next()){
                String no = String.valueOf(rs.getString("id"));
                String name = String.valueOf(rs.getString("name"));
                String address = String.valueOf(rs.getString("address"));
                String phone = String.valueOf(rs.getString("phone"));
                String email = String.valueOf(rs.getString("email"));
                String join_date = String.valueOf(rs.getString("join_date"));
                String status = String.valueOf(rs.getString("status"));
                String deleted = String.valueOf(rs.getString("deleted"));
                
                if (deleted.equals("yes")){
                    String table_data[] = {no, name, address, join_date};
                        DefaultTableModel table = (DefaultTableModel)memberTBL.getModel();
                
                        table.addRow(table_data);
                }
        }
            
        } catch (Exception e) {
            System.out.println("Error(userform tableDataLoader): "+e);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        memberNameLBL = new javax.swing.JLabel();
        printBTN = new com.samplemessage.Button();
        restoreBTN = new com.samplemessage.Button();
        jScrollPane1 = new javax.swing.JScrollPane();
        memberTBL = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Deleted Members");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        memberNameLBL.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        memberNameLBL.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));
        getContentPane().add(memberNameLBL, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 200, 310, 40));

        printBTN.setBackground(new java.awt.Color(0, 204, 51));
        printBTN.setForeground(new java.awt.Color(255, 255, 255));
        printBTN.setText("Print List");
        printBTN.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        printBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printBTNActionPerformed(evt);
            }
        });
        getContentPane().add(printBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 200, 110, 40));

        restoreBTN.setBackground(new java.awt.Color(0, 0, 255));
        restoreBTN.setForeground(new java.awt.Color(255, 255, 255));
        restoreBTN.setText("Restore");
        restoreBTN.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        restoreBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restoreBTNActionPerformed(evt);
            }
        });
        getContentPane().add(restoreBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 200, 110, 40));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 255)));

        memberTBL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Member ID", "Member Name", "Address", "Join Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        memberTBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                memberTBLMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(memberTBL);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 770, 290));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/find Members.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jFormattedTextField1.setText("jFormattedTextField1");
        getContentPane().add(jFormattedTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 390, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void memberTBLMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_memberTBLMousePressed
        // TODO add your handling code here:
        memberTBL.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                int row = memberTBL.getSelectedRow();
                cellData = memberTBL.getValueAt(row, 0).toString();
                
                try {  
                    java.sql.ResultSet rs = DB.getdata("SELECT * FROM customers WHERE id = '"+cellData+"'");
                    
                    while(rs.next()){
                         String name = String.valueOf(rs.getString("name"));
                         memberNameLBL.setText(name);
                    }
                } catch (Exception ex) {
                    Logger.getLogger(memberReport.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }//GEN-LAST:event_memberTBLMousePressed
LocalDate ld = LocalDate.now();
LocalTime lt = LocalTime.now();
DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH.mm.ss");

String date = ld.toString();
String time = lt.format(formatter);
    private void restoreBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restoreBTNActionPerformed
        // TODO add your handling code here:
        
        if(memberNameLBL.getText().equals("")){
            msg.textSet("Select a member first", "Select Member");
            GlassPanePopup.showPopup(msg);
        }else{
            try {
                DB.putdata("UPDATE customers SET deleted = 'no' WHERE id = '"+cellData+"'");
                System.out.println("Cusomer Restored");
                msg.textSet("Member Restored", "Restored");
                GlassPanePopup.showPopup(msg);
                memberNameLBL.setText("");
            } catch (Exception ex) {
                Logger.getLogger(memberReport.class.getName()).log(Level.SEVERE, null, ex);
            }
            tableDataClear();
            tableDataLoader();
            
        }
    }//GEN-LAST:event_restoreBTNActionPerformed

    private void printBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printBTNActionPerformed
        try {
            // TODO add your handling code here:
            java.sql.ResultSet rs = DB.getdata("SELECT * FROM customers WHERE deleted = 'yes'");

                StringBuilder htmlTable = new StringBuilder();
                htmlTable.append("<head>");
                htmlTable.append("<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\">");
                htmlTable.append("</head>");
                htmlTable.append("<caption>"+"Deleted Members"+"</caption>");
                htmlTable.append("<table class=\"table\">");
                htmlTable.append("<thead class=\"thead-dark\">");

                // Create table headers
                htmlTable.append("<tr>");
                htmlTable.append("<th>Member ID</th>");
                htmlTable.append("<th>Member Name</th>");
                htmlTable.append("<th>Address</th>");
                htmlTable.append("<th>Join Date</th>");
                htmlTable.append("</tr>");
                htmlTable.append("</thead>");
                htmlTable.append("<tbody>");
                
                while(rs.next()){
                    String cusId = String.valueOf(rs.getString("id"));
                    String cusName = String.valueOf(rs.getString("name"));
                    String address = String.valueOf(rs.getString("address"));
                    String joinDate = String.valueOf(rs.getString("join_date"));
                    
                    htmlTable.append("<tr>");
                    htmlTable.append("<td>"+cusId+"</td>");
                    htmlTable.append("<td>"+cusName+"</td>");
                    htmlTable.append("<td>"+address+"</td>");
                    htmlTable.append("<td>"+joinDate+"</td>");
                    htmlTable.append("</tr>");
                }
                
                htmlTable.append("</tbody>");
                htmlTable.append("</table>");
                
                String fileName = ""+date+"_"+time+"_Deleted Member Report.html";
                try (FileWriter fileWriter = new FileWriter(fileName)) {
                    fileWriter.write(htmlTable.toString());
                } catch (IOException e) {
                    e.printStackTrace();
                }
                
                System.out.println("Deleted Member Report Printed");
                msg.textSet("Report Printed", "Printed");
                GlassPanePopup.showPopup(msg);
            
        } catch (Exception ex) {
            Logger.getLogger(memberReport.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_printBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(memberReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(memberReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(memberReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(memberReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new memberReport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel memberNameLBL;
    private javax.swing.JTable memberTBL;
    private com.samplemessage.Button printBTN;
    private com.samplemessage.Button restoreBTN;
    // End of variables declaration//GEN-END:variables
}
