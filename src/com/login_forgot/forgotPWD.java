/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.login_forgot;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import com.passwordprotect.PasswordEncryption;

/**
 *
 * @author Aruna
 */
public class forgotPWD extends javax.swing.JFrame {

    /**
     * Creates new form forgotPWD
     */
    void fieldD(){
        newPassTXT.setEnabled(false);
        retypePassTXT.setEnabled(false);
        updatePassBTN.setEnabled(false);
    }
    void fieldE(){
        newPassTXT.setEnabled(true);
        retypePassTXT.setEnabled(true);
        updatePassBTN.setEnabled(true);
    }
    public forgotPWD() {
        initComponents();
        fieldD();
        init();
    }
    
    public void init(){
        header.initMoving(this);
        header.initEvent(this, panelBackground1);
    }
    JDBC.Jdbc DB = new JDBC.Jdbc();
    com.passwordprotect.PasswordEncryption PWD = new com.passwordprotect.PasswordEncryption();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        unameTXT = new javax.swing.JTextField();
        newPassTXT = new javax.swing.JPasswordField();
        retypePassTXT = new javax.swing.JPasswordField();
        updatePassBTN = new Components.ButtonGradient();
        errorLBL2 = new javax.swing.JLabel();
        findUserBTN1 = new Components.ButtonGradient();
        errorLBL1 = new javax.swing.JLabel();
        header = new com.component.Header();
        jLabel1 = new javax.swing.JLabel();
        panelBackground1 = new com.swing.PanelBackground();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Forgot Password");
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        unameTXT.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        unameTXT.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 153)));
        unameTXT.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        unameTXT.setSelectionColor(new java.awt.Color(153, 153, 255));
        unameTXT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                unameTXTKeyPressed(evt);
            }
        });
        getContentPane().add(unameTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 310, 250, 30));

        newPassTXT.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        newPassTXT.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 51, 153)));
        newPassTXT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                newPassTXTKeyPressed(evt);
            }
        });
        getContentPane().add(newPassTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 400, 250, 30));

        retypePassTXT.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        retypePassTXT.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 51, 153)));
        retypePassTXT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                retypePassTXTKeyPressed(evt);
            }
        });
        getContentPane().add(retypePassTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 460, 250, 30));

        updatePassBTN.setText("Update ");
        updatePassBTN.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        updatePassBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePassBTNActionPerformed(evt);
            }
        });
        getContentPane().add(updatePassBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 510, 130, 30));

        errorLBL2.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        getContentPane().add(errorLBL2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 550, 250, 20));

        findUserBTN1.setText("Find User");
        findUserBTN1.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        findUserBTN1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findUserBTN1ActionPerformed(evt);
            }
        });
        getContentPane().add(findUserBTN1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 350, 130, 30));

        errorLBL1.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        getContentPane().add(errorLBL1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 380, 250, 20));
        getContentPane().add(header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/GSM Forgot PWD.png"))); // NOI18N
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
        getContentPane().add(panelBackground1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 600));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void unameTXTKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_unameTXTKeyPressed
        
    }//GEN-LAST:event_unameTXTKeyPressed

    private void newPassTXTKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newPassTXTKeyPressed
        
    }//GEN-LAST:event_newPassTXTKeyPressed

    private void retypePassTXTKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_retypePassTXTKeyPressed
       
    }//GEN-LAST:event_retypePassTXTKeyPressed

    private void updatePassBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePassBTNActionPerformed
        String newPWD = newPassTXT.getText();
        String retypePWD = retypePassTXT.getText();
        
        if(newPWD.equals("") && retypePWD.equals("")){
            errorLBL2.setForeground(Color.RED);
            errorLBL2.setText("Please Enter New Password");
            System.out.println("Fields Empty");
            
        }else if(newPWD.equals(retypePWD)){
            System.out.println("Password Match");
            String name = unameTXT.getText();
            if(name.isEmpty()){
                System.out.println("Username Field Can't be Empty");
                errorLBL2.setForeground(Color.RED);
                errorLBL2.setText("Please Enter Username Or Name");
            }else{
                try {
                    java.sql.ResultSet rs = DB.getdata("SELECT * FROM users");
                    while(rs.next()){
                        String DB_userName = String.valueOf(rs.getString("userName"));
                        String DB_Name = String.valueOf(rs.getString("name"));

                        if(DB_userName.equals(name)){
                            String newPassword = PasswordEncryption.encryptPassword(newPWD);
                            DB.putdata("UPDATE users SET password = '"+newPassword+"' WHERE userName = '"+name+"'");
                        }else if (DB_Name.equals(name)) {
                            java.sql.ResultSet rs2 = DB.getdata("SELECT username FROM users WHERE name = '"+name+"'");
                            while(rs2.next()){
                                String fname_uname = String.valueOf(rs2.getString("userName"));
                                System.out.println("Username Found Under "+fname_uname+". Enter New Password");
                                errorLBL1.setForeground(Color.GREEN);
                                errorLBL1.setText("Enter Your New Password "+fname_uname+".");
                                fieldE();
                                String newPassword = PasswordEncryption.encryptPassword(newPWD);
                                DB.putdata("UPDATE users SET password = '"+newPassword+"' WHERE userName = '"+fname_uname+"'");
                                break;
                            }
                        }else{
                            System.out.println("Not Done");
                            errorLBL1.setForeground(Color.RED);
                            errorLBL1.setText("User Not Found");
                            fieldD();
                        }

            }
                } catch (Exception ex) {
                    Logger.getLogger(forgotPWD.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            errorLBL2.setForeground(Color.green);
            errorLBL2.setText("Done");
        }else{
            errorLBL2.setForeground(Color.red);
            errorLBL2.setText("Not Match");
        }
    }//GEN-LAST:event_updatePassBTNActionPerformed

    private void findUserBTN1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findUserBTN1ActionPerformed
        String name = unameTXT.getText();
        
        if (name.isEmpty()){
            System.out.println("Username Field Can't be Empty");
            errorLBL1.setForeground(Color.RED);
            errorLBL1.setText("Please Enter Username Or Name");
        }else{
            try {
                java.sql.ResultSet rs = DB.getdata("SELECT * FROM users");
                while(rs.next()){
                String DB_userName = String.valueOf(rs.getString("userName"));
                String DB_firstName = String.valueOf(rs.getString("name"));

                if(DB_userName.equals(name)){
                    java.sql.ResultSet rs1 = DB.getdata("SELECT name FROM users WHERE userName = '"+name+"'");
                    while(rs1.next()){
                        String uname_fname = String.valueOf(rs1.getString("name"));
                        System.out.println("First Name Found Under "+uname_fname+". Enter New Password");
                        errorLBL1.setForeground(Color.GREEN);
                        errorLBL1.setText("Enter Your New Password "+uname_fname+".");
                        fieldE();
                        break;
                    }
                }else if (DB_firstName.equals(name)) {
                    java.sql.ResultSet rs2 = DB.getdata("SELECT username FROM users WHERE name = '"+name+"'");
                    while(rs2.next()){
                        String fname_uname = String.valueOf(rs2.getString("userName"));
                        System.out.println("Username Found Under "+fname_uname+". Enter New Password");
                        errorLBL1.setForeground(Color.GREEN);
                        errorLBL1.setText("Enter Your New Password "+fname_uname+".");
                        fieldE();
                        break;
                    }
                }else{
                    System.out.println("Not Done");
                    errorLBL1.setForeground(Color.RED);
                    errorLBL1.setText("User Not Found");
                    fieldD();
                }

            }
            } catch (Exception ex) {
                Logger.getLogger(forgotPWD.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_findUserBTN1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(forgotPWD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(forgotPWD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(forgotPWD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(forgotPWD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new forgotPWD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel errorLBL1;
    private javax.swing.JLabel errorLBL2;
    private Components.ButtonGradient findUserBTN1;
    private com.component.Header header;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPasswordField newPassTXT;
    private com.swing.PanelBackground panelBackground1;
    private javax.swing.JPasswordField retypePassTXT;
    private javax.swing.JTextField unameTXT;
    private Components.ButtonGradient updatePassBTN;
    // End of variables declaration//GEN-END:variables
}
